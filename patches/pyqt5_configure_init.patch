Index: configure.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- configure.py	(date 1562041436573)
+++ configure.py	(date 1562041436573)
@@ -1552,26 +1552,32 @@
     if target_config.py_platform == 'win32':
         inf.write("""
 
+from ctypes import CDLL
+
+
 def find_qt():
     import os
 
-    path = os.environ['PATH']
+    try:
+        qt5 = CDLL("Qt5Core")
+    except OSError as e:
+        path = os.environ['PATH']
 
-    dll_dir = os.path.dirname(__file__) + '\\\\Qt\\\\bin'
-    if os.path.isfile(dll_dir + '\\\\Qt5Core.dll'):
-        path = dll_dir + ';' + path
-        os.environ['PATH'] = path
-    else:
-        for dll_dir in path.split(';'):
-            if os.path.isfile(dll_dir + '\\\\Qt5Core.dll'):
-                break
-        else:
-            raise ImportError("unable to find Qt5Core.dll on PATH")
+        dll_dir = os.path.dirname(__file__) + '\\Qt\\bin'
+        if os.path.isfile(dll_dir + '\\Qt5Core.dll'):
+            path = dll_dir + ';' + path
+            os.environ['PATH'] = path
+        else:
+            for dll_dir in path.split(';'):
+                if os.path.isfile(dll_dir + '\\Qt5Core.dll'):
+                    break
+            else:
+                raise ImportError("unable to find Qt5Core.dll on PATH")
 
-    try:
-        os.add_dll_directory(dll_dir)
-    except AttributeError:
-        pass
+        try:
+            os.add_dll_directory(dll_dir)
+        except AttributeError:
+            pass
 
 
 find_qt()
